{"version":3,"sources":["p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h8/HW8.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","homeWorkReducer","state","action","type","newState","payload","key","sort","a","b","name","filter","el","age","SuperButton","red","className","restProps","finalClassName","s","default","initialPeople","_id","HW8","useState","people","setPeople","finalPeople","map","p","JSON","stringify","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,kBCA/DD,EAAOC,QAAU,CAAC,IAAM,mB,gKCDXC,EAAkB,SAACC,EAAYC,GACxC,OAAQA,EAAOC,MACX,IAAK,OACD,IAAIC,EAAa,GACjB,GAAoB,MAAhBF,EAAOG,QAAc,CACzB,IAAK,IAAIC,KAAOL,EAAQG,EAASE,GAAKL,EAAMK,GAC5CF,EAASG,MAAM,SAACC,EAAMC,GAAW,OAAGD,EAAEE,KAAOD,EAAEC,MAAc,EACzBF,EAAEE,KAAOD,EAAEC,KAAa,OAA3B,KACjC,GAAoB,QAAhBR,EAAOG,QAAgB,CAC3B,IAAK,IAAIC,KAAOL,EAAQG,EAASE,GAAKL,EAAMK,GAC5CF,EAASG,MAAM,SAACC,EAAMC,GAAW,OAAGD,EAAEE,KAAOD,EAAEC,MAAc,EACzBF,EAAEE,KAAOD,EAAEC,KAAa,OAA3B,KAKjC,OAAON,EAEX,IAAK,QAGD,OADaH,EAAMU,QAAO,SAAAC,GAAE,OAAGA,EAAGC,IAAI,MAG1C,QAAS,OAAOZ,I,uBCKTa,EAjBqC,SAAC,GAIK,IAJJC,EAIG,EAJHA,IACGC,EAGA,EAHAA,UACGC,EAEH,mCAE/CC,EAAc,UAAMH,EAAMI,IAAEJ,IAAMI,IAAEC,QAAtB,YAAiCJ,GAErD,OACQ,0CACIA,UAAWE,GACPD,KClBdI,EAAgB,CAClB,CAACC,IAAK,EAAGZ,KAAM,qBAAOG,IAAK,GAC3B,CAACS,IAAK,EAAGZ,KAAM,yDAAaG,IAAK,IACjC,CAACS,IAAK,EAAGZ,KAAM,2BAAQG,IAAK,IAC5B,CAACS,IAAK,EAAGZ,KAAM,uCAAUG,IAAK,IAC9B,CAACS,IAAK,EAAGZ,KAAM,6CAAWG,IAAK,IAC/B,CAACS,IAAK,EAAGZ,KAAM,iCAASG,IAAK,KAiElBU,MA9Df,WAAgB,IAAD,EACiBC,mBAASH,GAD1B,mBACJI,EADI,KACIC,EADJ,KAGLC,EAAcF,EAAOG,KAAI,SAAAC,GAAC,OAC5B,yBAAKvB,IAAKuB,EAAEP,KACRO,EAAEnB,KADN,KACcmB,EAAEhB,QA4BdT,EAAWJ,EAAgBqB,EAAe,CAAClB,KAAM,OAAQE,QAAS,OAUxE,OALkByB,KAAKC,UAAU3B,GAAa0B,KAAKC,UAAUV,GAMzD,6BACI,6BADJ,cAMKM,EACD,6BAAK,kBAAC,EAAD,CAAaK,QA1CX,WACXN,EAAU1B,EAAgBqB,EAAe,CAAClB,KAAM,OAAQE,QAAS,UAyCxD,YACL,6BAAK,kBAAC,EAAD,CAAa2B,QAxCT,WACbN,EAAU1B,EAAgBqB,EAAe,CAAClB,KAAM,OAAQE,QAAS,YAuCxD,cACL,6BAAK,kBAAC,EAAD,CAAa2B,QAtCR,WACdN,EAAU1B,EAAgBqB,EAAe,CAAClB,KAAM,aAqCvC,aACL,6BAGA,+BCxCG8B,MAhBf,WACI,OACI,yBAAKjB,UAAWG,IAAEc,KAQd,kBAAC,EAAD,QCZQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDiItB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b9672684.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__32Jpd\",\"red\":\"SuperButton_red__1j0Pc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3ju9d\"};","export const homeWorkReducer = (state: any, action: any): any => {\n    switch (action.type) {\n        case \"sort\": {\n            let newState:any=[]\n            if (action.payload==\"up\"){\n            for (let key in state) {newState[key]=state[key]}                     \n            newState.sort( (a:any,b:any) => {if(a.name < b.name) return -1;\n                                             if(a.name > b.name) return 1;})}\n            if (action.payload==\"down\"){\n            for (let key in state) {newState[key]=state[key]}                     \n            newState.sort( (a:any,b:any) => {if(a.name > b.name) return -1;\n                                             if(a.name < b.name) return 1;})\n            }\n            // console.log(newState)  //sort\n            // console.log(state)     // not sort\n            // console.log(state==newState);\n            return newState\n        }\n        case \"check\": {\n            //@ts-ignore\n            let newState=state.filter(el=> el.age>17 )\n            return newState\n        }\n        default: return state\n    }\n};\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\n\nconst SuperButton: React.FC<SuperButtonPropsType> = ({red,\n                                                         className,\n                                                         ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n                                                        }\n                                                    ) => {\n\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n            <button\n                className={finalClassName}\n                {...restProps}\n                // отдаём кнопке остальные пропсы если они есть (children там внутри)\n            />\n    );\n}\n\nexport default SuperButton;\n","import React, {useState} from \"react\";\nimport {homeWorkReducer} from \"./bll/homeWorkReducer\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\nconst initialPeople = [\n    {_id: 0, name: \"Кот\", age: 3},\n    {_id: 1, name: \"Александр\", age: 66},\n    {_id: 2, name: \"Коля\", age: 16},\n    {_id: 3, name: \"Виктор\", age: 44},\n    {_id: 4, name: \"Дмитрий\", age: 40},\n    {_id: 5, name: \"Ирина\", age: 55},\n]\n\nfunction HW8() {\n    const [people, setPeople] = useState(initialPeople);\n\n    const finalPeople = people.map(p => (\n        <div key={p._id}>\n           {p.name}, {p.age}\n        </div>\n    ))\n\n    const sortUp = () => {\n        setPeople(homeWorkReducer(initialPeople, {type: \"sort\", payload: \"up\"}))  \n    }\n    const sortDown = () => {\n        setPeople(homeWorkReducer(initialPeople, {type: \"sort\", payload: \"down\"}))  \n    }\n    const sortCheck = () => {\n        setPeople(homeWorkReducer(initialPeople, {type: \"check\"}))  \n    }\n\n\n    // test---------------------------------------------------------------------\n    // const ob1 = {_id: 1, name: \"Александр\", age: 66}\n    // const ob2 = {_id: 1, name: \"Александр\", age: 66}\n\n    // const People = [\n        // {_id: 1, name: \"Александр\", age: 66},\n        // {_id: 3, name: \"Виктор\", age: 44},\n        // {_id: 4, name: \"Дмитрий\", age: 40},\n        // {_id: 5, name: \"Ирина\", age: 55},\n        // {_id: 2, name: \"Коля\", age: 16},\n        // {_id: 0, name: \"Кот\", age: 3}\n    // ]\n\n    const newState = homeWorkReducer(initialPeople, {type: \"sort\", payload: \"up\"})\n        //   console.log(newState);\n        //   console.log(initialPeople[1]);\n        //   console.log(newState[0]==initialPeople[1]);\n                 \n          let equal = JSON.stringify(newState) == JSON.stringify(initialPeople);\n             \n    // -------------------------------------------------------------------------\n     \n\n    return (\n        <div>\n            <hr/>\n            homeworks 8\n\n            {/*should work (должно работать)*/}\n\n            {finalPeople}\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\n            <div><SuperButton onClick={sortDown}>sort down</SuperButton></div>\n            <div><SuperButton onClick={sortCheck}>check 18</SuperButton></div>\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativePeople/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW8;\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\nimport HW6 from \"../../../p2-homeworks/h6/HW6\";\r\nimport HW7 from \"../../../p2-homeworks/h7/HW7\";\r\nimport HW8 from \"../../../p2-homeworks/h8/HW8\";\r\nimport HW9 from \"../../../p2-homeworks/h9/HW9\";\r\n\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            {/*<HW5/>*/}\r\n            {/*<HW6/>*/}\r\n            {/*<HW7/>*/}\r\n            <HW8/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}