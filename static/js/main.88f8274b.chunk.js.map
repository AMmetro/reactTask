{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","styles","container","blockRight","name","textMessage","message","time","clear","avatarHolder","avatar","src","alt","blockCenter","messageData","messageData2","HW1","Affair","curentAffair","affair","type","checked","priority","onClick","dellId","deleteAffairCallback","deleteCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","tsk","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","valid","hint","group","value","onChange","required","bar","label","GreetingContainer","users","addUserCallback","setName","setError","length","e","target","trim","alert","HW3","setUsers","newUser","v1","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","errClass","superInput","currentTarget","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","console","log","HW4","text","setText","showAlert","setChecked","column","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","spanClass","style","width","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","res","SuperSelect","options","onChangeOption","elem","i","selected","SuperRadio","mappedOptions","o","wrapper","arr","HW7","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.88f8274b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"clear\":\"Message_clear__cAnr_\",\"container\":\"Message_container__-rvRk\",\"blockCenter\":\"Message_blockCenter__P9bDY\",\"avatarHolder\":\"Message_avatarHolder__1BsZx\",\"blockRight\":\"Message_blockRight__2fofV\",\"avatar\":\"Message_avatar__3LgY_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"Greeting_errorInput__2xK0J\",\"superInput\":\"Greeting_superInput__3FL28\",\"hint\":\"Greeting_hint__joZZp\",\"valid\":\"Greeting_valid__3Zpch\",\"error\":\"Greeting_error__h4ux0\",\"group\":\"Greeting_group__3RjE6\",\"label\":\"Greeting_label__8tAc5\",\"bar\":\"Greeting_bar__2WaQQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__2VIbF\",\"errClass\":\"SuperInputText_errClass__3LLlu\",\"error\":\"SuperInputText_error__2E_aU\",\"superInput\":\"SuperInputText_superInput__nqfGS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__32Jpd\",\"red\":\"SuperButton_red__1j0Pc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1Cz2S\",\"spanClassName\":\"SuperCheckbox_spanClassName__2QlEC\",\"finalInputClassName\":\"SuperCheckbox_finalInputClassName__cVkNZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanClass\":\"SuperEditableSpan_spanClass__108q7\",\"testInput\":\"SuperEditableSpan_testInput__1pePY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_radio_btn\":\"SuperRadio_form_radio_btn__1M9Nt\",\"wrapper\":\"SuperRadio_wrapper__VjT_R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3ju9d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3qcDZ\",\"column\":\"HW4_column__urSr3\"};","import React from \"react\";\nimport styles from './Message.module.css';\nimport {dataType} from \"./HW1\";\n\n\n\nfunction Message(props:dataType) {\n\n    return (\n\n        <div className={styles.container}>\n\n            <div className={styles.blockRight}>\n                Hello, {props.name}\n                <i><p className={styles.textMessage}>{props.message}</p></i>\n                <p className={styles.time}>{props.time}</p>\n            </div>\n\n            <div className={styles.clear}></div>\n\n            <div className={styles.avatarHolder}>\n                <img className={styles.avatar}\n                     src={props.avatar}\n                     alt={\"avatar\"}/>\n            </div>\n\n            <div className={styles.clear}></div>\n            <div className={styles.blockCenter}></div>\n\n        </div>\n\n    );\n}\n\nexport default Message;\n\n\n\n","import React from \"react\";\nimport Message from \"./Message\";\n\n\nconst messageData: dataType = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Andrei\",\n    message: \"What type Data you put? 'Any' are not allowed!\",\n    time: \"22:00\",\n};\n\nconst messageData2: dataType = {\n    avatar: \"https://i.ytimg.com/vi/Tp9B6gDCXnU/maxresdefault.jpg\",\n    name: \"React\",\n    message: \" T_y_P_e_S nothing is sure everything is possible \",\n    time: \"22:01\",\n};\n\nexport type dataType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction HW1() {\n\n    return (\n        <div>\n            <hr/>\n            <div> homeworks 1 </div>\n\n            <Message\n                    avatar={messageData.avatar}\n                    name={messageData.name}\n                    message={messageData.message}\n                    time={messageData.time}\n            />\n\n\n            <hr/>\n            <Message\n                avatar={messageData2.avatar}\n                name={messageData2.name}\n                message={messageData2.message}\n                time={messageData2.time}\n            />\n\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    // affair: any // need to fix any\n               affair: AffairType // need to fix any\n    deleteAffairCallback: (_id:number)=>void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = (dellId:number) => {\n            props.deleteAffairCallback(dellId)};// need to fix\n\n        const curentAffair=props.affair\n\n    return (\n        <div>\n\n            <input type=\"checkbox\" checked={true}/>{curentAffair.name} <span>priority--</span>{curentAffair.priority }\n\n            <button onClick={(dellId)=>deleteCallback(curentAffair._id)}>X</button>\n\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (FilterType:FilterType)=>void\n    deleteAffairCallback: (_id: number)=> void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter(\"all\")  };   // need to fix\n    const setHigh = () => {props.setFilter(\"high\")};\n    const setMiddle = () => {props.setFilter(\"middle\")};\n    const setLow = () => {props.setFilter(\"low\")};\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n// export type AffairPriorityType = any // need to fix any\n                                export type AffairPriorityType = \"high\" | \"low\"|\"middle\"\n\n// export type AffairType = any; // need to fix any\n                                export type AffairType = {_id:number, name:string, priority:string};\n\nexport type FilterType = \"all\"|AffairPriorityType;\n\n\n// type defaultAffairsType <Array<affairTypes>>\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs:Array<AffairType>, filter:FilterType ):any=> { // need to fix any\n    if (filter === \"all\") return affairs;\n    else if (filter === \"high\") {\n        return affairs.filter(tsk => {return (tsk.priority === \"high\")})    }\n       else if (filter === \"low\") {\n        return affairs.filter(tsk => {return (tsk.priority === \"low\")})     }\n       else if (filter === \"middle\") {\n          return affairs.filter(tsk => {return (tsk.priority === \"middle\")})     }\n                                                        // return; // need to fix\n}\n\nexport const deleteAffair = (affairs:Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter( a => a._id !== _id ); // need to fix\n}\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n    name: string                                                       // fixed\n    setNameCallback: (e:ChangeEvent<HTMLInputElement>)=>void           // fixed\n    addUser: ()=>void                                                   // fixed\n    error: boolean                                                     // fixed\n    totalUsers: number                                                 // fixed\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n\n    const inputClass =`${error ? s.error : s.valid}`\n    const hint = error ? \"input valid name\" : \"add more name\"\n\n    return (\n        <div>\n                <div className={s.group}>\n                   <input\n                   value={name}\n                   onChange={setNameCallback}\n                   className={inputClass}\n                   required/>\n                   <span className={s.bar}></span>\n                   <label className={s.label}>put name here</label>\n                   {error && <span className={inputClass}>{error}</span>}\n                </div>\n                    <span>{error}</span>\n                    <button onClick={addUser}>add</button>\n                    <span className={s.hint}>total Users={totalUsers}</span>\n                    <div>{hint}</div>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {useState, ChangeEvent} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\"\n\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>                                 // fixed\n    addUserCallback: (name: string) => void                  // fixed\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\");           // fixed\n    const [error, setError] = useState<boolean>(false);      // fixed\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {   // fixed\n        setName(e.target.value);                                      // fixed\n        if (e.target.value.length === 0 || !e.target.value.trim()) {\n                     setError(true)\n                } else {\n                    setError(false)\n                }\n    };\n\n\n\n    const addUser = () => {                                          //fixed\n        if (name.length === 0 || !name.trim()) {\n        } else {\n            alert(`Hello ${name} !`)\n            addUserCallback(name)\n            setName(\"\")\n        }\n    };\n\n    let totalUsers = users.length;                                  // fixed\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string                                  // fixed\n    name: string                                 // fixed\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]);         // fixed\n\n    const addUserCallback = (name: string) => {                                // fixed\n           let newUser={_id:v1(), name}\n           setUsers([...users, newUser]);                                // fixed\n    }\n\n\n\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n             <GreetingContainer users={users}\n                                addUserCallback={addUserCallback}/>\n\n            <hr/>\n\n\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange,\n        onChangeText,\n        onKeyPress,\n        onEnter,\n        error,\n        className,\n        spanClassName,\n        // все остальные пропсы попадут в объект restProps\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n\n       const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n         onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)          ??????????????????????????????? куда он уходит\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${s.errorInput} ${error ? s.errClass: s.superInput }`; // need to fix with (?:) and s.superInput\n\n    return (\n        <div>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n               />\n\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </div>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\n\nconst SuperButton: React.FC<SuperButtonPropsType> = ({red,\n                                                         className,\n                                                         ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n                                                        }\n                                                    ) => {\n\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n            <button\n                className={finalClassName}\n                {...restProps}\n                // отдаём кнопке остальные пропсы если они есть (children там внутри)\n            />\n    );\n}\n\nexport default SuperButton;\n","import { on } from \"process\";\nimport React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        console.log(e.currentTarget.checked);\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        onChange && onChange (e)\n            }        \n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // className={s.blue} рабоет смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                 >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\nimport s from \"./SuperEditableSpan.module.css\";\n\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n\n    const onEnterCallback = () => {\n        setEditMode(false); // выключить editMode при нажатии Enter\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n         setEditMode(true); // включить editMode при двойном клике\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const spanClassName = `${s.spanClass}`\n\n    console.log(\"restProps=  \",  restProps)\n    console.log(\"restSpanProps=  \",  restSpanProps)\n    console.log(\"children=  \",  children)\n    console.log(\"spanClassName=  \",  spanClassName)\n\n\n                       let onKeyPress=()=>{\n                       let Myst = document.getElementsByClassName(s.testInput)\n                       {/*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*/}\n                       {/*<input type=\"text\" onKeyDown=\"this.style.width = ((this.value.length + 1) * 8) + 'px';\"/>*/}\n                        }\n\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n                        style={ {width: \"320px\" }  }\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                      {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n\n\n\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\n\nfunction HW6() {\n\n    const [value, setValue] = useState<string>(\"\");\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n\n    const restore = () => {\n        let res=JSON.stringify(restoreState(\"editable-span-value\",{}))\n        setValue(res)\n    };\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={ {children: value ? undefined : \"enter text...\"} }\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW6;\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\n\n\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n\n    const mappedOptions: any[] = options ? options.map((elem, i) => <option\n            key={elem + \"-\" + i}  // map options with key\n            value={elem}\n            selected={i == 1 ? true : false}>\n            {elem}\n        </option>)\n        : [];\n\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        // onChange\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n\n    return (\n        //  value в restProps перебивает \"selected=true/false\"\n\n            <select onChange={onChangeCallback} {...restProps}>\n               {mappedOptions}\n            </select>\n\n    );\n}\n\nexport default SuperSelect;\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperRadio.module.css\"\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // onChange, onChangeOption\n         onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\n        <div className={s.form_radio_btn}>\n            {/*<label key={name + \"-\" + i}>*/}\n                <input\n                    type={\"radio\"}\n                    id={o}\n                    name={name}\n                    checked={ o == value ? true : false}\n                    value={o}\n                    onChange={onChangeCallback}\n                />\n            <label key={name + \"-\" + i} htmlFor={o}>{o}</label>\n            {/*    {o}*/}\n            {/*</label>*/}\n        </div>\n    )) : [];\n\n    return (\n        <div className={s.wrapper}>\n           {mappedOptions}\n        </div>\n    );\n}\n\nexport default SuperRadio;\n","import React, {useState} from \"react\";\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\n\nconst arr = [\"x\", \"y\", \"z\", \"w\"];\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[2]);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={\"radio\"}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW7;\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\nimport HW6 from \"../../../p2-homeworks/h6/HW6\";\r\nimport HW7 from \"../../../p2-homeworks/h7/HW7\";\r\n\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n            <HW6/>\r\n            <HW7/>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}