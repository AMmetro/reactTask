{"version":3,"sources":["p2-homeworks/h5/pages/eror.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h5/pages/navigation.module.css","p2-homeworks/h5/pages/Navigation.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css"],"names":["module","exports","Navigation","useState","activeMenu","setActiveMenu","selectActive","link","link_status1","s","active","link_status2","link_status3","console","log","type","id","className","hidden_menu_ticker","btn_menu","htmlFor","first","second","third","hidden_menu","onClick","to","Header","head","Error404","error_wrapper","error404","Message","props","styles","container","blockRight","name","textMessage","message","time","clear","avatarHolder","avatar","src","alt","blockCenter","messageData","messageData2","HW1","Affair","curentAffair","affair","checked","priority","dellId","deleteAffairCallback","deleteCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","HW2","affairs","setAffairs","filter","filteredAffairs","tsk","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","valid","hint","value","onChange","someClass","GreetingContainer","users","addUserCallback","setName","setError","checkErorField","length","trim","e","target","alert","HW3","setUsers","newUser","v1","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","errClass","superInput","group","currentTarget","required","bar","label","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","HW4","text","setText","showAlert","setChecked","column","PreJunior","Junior","JuniorPlus","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0572f566.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"first\":\"eror_first__1KIfw\",\"error404\":\"eror_error404__1PTeo\",\"error_wrapper\":\"eror_error_wrapper__3Vtfw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3Q7Gv\",\"error\":\"Greeting_error__2sV6j\",\"valid\":\"Greeting_valid__1WzzS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1qlaM\",\"red\":\"SuperButton_red__2hrXB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3E-uR\",\"spanClassName\":\"SuperCheckbox_spanClassName__3Z1j9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2pleP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1sTSz\",\"column\":\"HW4_column__1O3qE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"navigation_active__Y-DDP\",\"head\":\"navigation_head__1XOpS\",\"hidden_menu_ticker\":\"navigation_hidden_menu_ticker__piXfS\",\"btn_menu\":\"navigation_btn_menu__1oS-C\",\"hidden_menu\":\"navigation_hidden_menu__1xHna\",\"first\":\"navigation_first__2xD6h\",\"second\":\"navigation_second__3blYJ\",\"third\":\"navigation_third__1FfwM\"};","import React, {useState} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport s from './navigation.module.css';\nimport PATH from \"../Routes\"\n\n\n// export const PATH = {\n//     PRE_JUNIOR: \"/pre-junior\",\n//     JUNIOR: \"/junior\",\n//     JUNIOR_PLUS: \"/juniorPlus\"\n//     // added addition paths\n// }\n\nfunction Navigation() {\n\n    const [activeMenu, setActiveMenu] = useState<string> (\"\");\n\n    const selectActive=(link:string)=>{\n        if (link===\"link1\") {setActiveMenu(\"link1\")}\n        if (link===\"link2\") {setActiveMenu(\"link2\")}\n        if (link===\"link3\") {setActiveMenu(\"link3\")}\n    }\n\n    let link_status1 = activeMenu===\"link1\" ? s.active : \"\"\n    let link_status2 = activeMenu===\"link2\" ? s.active : \"\"\n    let link_status3 = activeMenu===\"link3\" ? s.active : \"\"\n    console.log(\"link_status1=     \" + link_status1)\n\n    return (\n        <div>\n\n        <input type=\"checkbox\" id=\"hmt\" className={s.hidden_menu_ticker}/>\n\n                    {/*this block label is button */}\n                   <label className={s.btn_menu} htmlFor=\"hmt\">\n                     <span className={s.first}></span>\n                     <span className={s.second}></span>\n                     <span className={s.third}></span>\n                   </label>\n\n               <ul className={s.hidden_menu}>\n                  <li><NavLink onClick={()=>selectActive(\"link1\")} className={link_status1} to=\"/pre-junior\">Pre-junior </NavLink></li>\n                  <li><NavLink onClick={()=>selectActive(\"link2\")} className={link_status2} to=\"/junior\">Junior </NavLink></li>\n                  <li><NavLink onClick={()=>selectActive(\"link3\")} className={link_status3} to=\"/juniorPlus\">JuniorPlus </NavLink></li>\n               </ul>\n\n\n\n        </div>\n    );\n}\n\nexport default Navigation;\n\n","import React from \"react\";\nimport Navigation from \"./pages/Navigation\";\nimport s from \"./pages/navigation.module.css\";\n\nfunction Header() {\n    return (\n        <div>\n\n            <header className={s.head}><h1>Home work</h1></header>\n\n            <Navigation/>\n\n        </div>\n);\n}\n\nexport default Header;\n","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport s from \"./eror.module.css\";\n\nfunction Error404() {\n    return (\n        <div className={s.error_wrapper}>\n            <section className={s.error404}>\n                <h1>Error 404</h1>\n                <h1>Page not found!</h1>\n                <hr/>\n                <h1>Choose the page from list the below</h1>\n            </section>\n\n            <ul className={s.first}>\n                <li><NavLink to=\"/pre-junior\"> go home</NavLink></li>\n                <li><NavLink to=\"/junior\">go work </NavLink></li>\n                <li><NavLink to=\"/juniorPlus\">go study </NavLink></li>\n             </ul>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\nimport styles from './Message.module.css';\nimport {dataType} from \"./HW1\";\n\n\n\nfunction Message(props:dataType) {\n\n    return (\n\n        <div className={styles.container}>\n\n            <div className={styles.blockRight}>\n                Hello, {props.name}\n                <i><p className={styles.textMessage}>{props.message}</p></i>\n                <p className={styles.time}>{props.time}</p>\n            </div>\n\n            <div className={styles.clear}></div>\n\n            <div className={styles.avatarHolder}>\n                <img className={styles.avatar}\n                     src={props.avatar}\n                     alt={\"avatar\"}/>\n            </div>\n\n            <div className={styles.clear}></div>\n            <div className={styles.blockCenter}></div>\n\n        </div>\n\n    );\n}\n\nexport default Message;\n\n\n\n","import React from \"react\";\nimport Message from \"./Message\";\n\n\nconst messageData: dataType = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Andrei\",\n    message: \"What type Data you put? 'Any' are not allowed!\",\n    time: \"22:00\",\n};\n\nconst messageData2: dataType = {\n    avatar: \"https://i.ytimg.com/vi/Tp9B6gDCXnU/maxresdefault.jpg\",\n    name: \"React\",\n    message: \" T_y_P_e_S nothing is sure everything is possible \",\n    time: \"22:01\",\n};\n\nexport type dataType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction HW1() {\n\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            should work (должно работать)\n\n            <Message\n                    avatar={messageData.avatar}\n                    name={messageData.name}\n                    message={messageData.message}\n                    time={messageData.time}\n            />\n\n\n            <hr/>\n            <Message\n                avatar={messageData2.avatar}\n                name={messageData2.name}\n                message={messageData2.message}\n                time={messageData2.time}\n            />\n\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    // affair: any // need to fix any\n               affair: AffairType // need to fix any\n    deleteAffairCallback: (_id:number)=>void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = (dellId:number) => {\n            props.deleteAffairCallback(dellId)};// need to fix\n\n        const curentAffair=props.affair\n\n    return (\n        <div>\n\n            <input type=\"checkbox\" checked={true}/>{curentAffair.name} <span>priority--</span>{curentAffair.priority }\n\n            <button onClick={(dellId)=>deleteCallback(curentAffair._id)}>X</button>\n\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (FilterType:FilterType)=>void\n    deleteAffairCallback: (_id: number)=> void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter(\"all\")  };   // need to fix\n    const setHigh = () => {props.setFilter(\"high\")};\n    const setMiddle = () => {props.setFilter(\"middle\")};\n    const setLow = () => {props.setFilter(\"low\")};\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n// export type AffairPriorityType = any // need to fix any\n                                export type AffairPriorityType = \"high\" | \"low\"|\"middle\"\n\n// export type AffairType = any; // need to fix any\n                                export type AffairType = {_id:number, name:string, priority:string};\n\nexport type FilterType = \"all\"|AffairPriorityType;\n\n\n// type defaultAffairsType <Array<affairTypes>>\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs:Array<AffairType>, filter:FilterType ):any=> { // need to fix any\n    if (filter === \"all\") return affairs;\n    else if (filter === \"high\") {\n        return affairs.filter(tsk => {return (tsk.priority === \"high\")})    }\n       else if (filter === \"low\") {\n        return affairs.filter(tsk => {return (tsk.priority === \"low\")})     }\n       else if (filter === \"middle\") {\n          return affairs.filter(tsk => {return (tsk.priority === \"middle\")})     }\n                                                        // return; // need to fix\n}\n\nexport const deleteAffair = (affairs:Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter( a => a._id !== _id ); // need to fix\n}\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n    name: string                                                       // fixed\n    setNameCallback: (e:ChangeEvent<HTMLInputElement>)=>void           // fixed\n    addUser: ()=>void                                                   // fixed\n    error: boolean                                                     // fixed\n    totalUsers: number                                                 // fixed\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n\n    const inputClass = error ? s.error : s.valid\n    const hint = error ? \"input valid name\" : \"add more name\"\n\n    return (\n        <div>\n            <input value={name}\n                   onChange={setNameCallback}\n                   className={inputClass}/>\n            <span>{error}</span>\n            <button onClick={addUser}>add</button>\n            <span className={s.someClass}>total Users={totalUsers}</span>\n            <div>{hint}</div>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {useState, ChangeEvent} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\"\n\n\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>                                 // fixed\n    addUserCallback: (name:string)=>void                  // fixed\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\");           // fixed\n    const [error, setError] = useState<boolean>(true);      // fixed\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {   // fixed\n        setName(e.target.value);                                      // fixed\n         checkErorField()\n    };\n\n     const checkErorField=()=>{\n            if (name.length === 0 || !name.trim()) {\n            setError (true)\n        }\n        else {\n            setError (false)\n        }\n    }\n\n\n    const addUser = () => {                                          //fixed\n        if (name.length === 0 || !name.trim()) {\n           }\n        else {\n            alert(`Hello ${name} !`)\n            addUserCallback(name)\n            setName(\"\")\n        }\n    };\n\n    let totalUsers = users.length;                                  // fixed\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string                                  // fixed\n    name: string                                 // fixed\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]);         // fixed\n\n    const addUserCallback = (name: string) => {                                // fixed\n           let newUser={_id:v1(), name}\n           setUsers([...users, newUser]);                                // fixed\n    }\n\n\n\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n             <GreetingContainer users={users}\n                                addUserCallback={addUserCallback}/>\n\n            <hr/>\n\n\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText, onKeyPress, onEnter, error, className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n\n       const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n         onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${s.errorInput} ${error ? s.errClass: s.superInput }`; // need to fix with (?:) and s.superInput\n\n    return (\n        <div className={s.group}>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                \n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n               required/>\n            <span className={s.bar}></span>\n            <label className={s.label}>text</label>\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </div>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\n\nconst SuperButton: React.FC<SuperButtonPropsType> = ({red,\n                                                         className,\n                                                         ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n                                                        }\n                                                    ) => {\n\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n    console.log({...restProps})\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps}\n            // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import { on } from \"process\";\nimport React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        console.log(e.currentTarget.checked);\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        onChange && onChange (e)\n            }        \n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // className={s.blue} рабоет смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    red={true} // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                 >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\n\n\nfunction Junior() {\n    return (\n        <div>\n\n            <h1> Junior Page </h1>\n\n        </div>\n    );\n}\n\nexport default Junior;\n\n","import React from \"react\";\n\n\nfunction JuniorPlus() {\n    return (\n        <div>\n\n            <h1> JuniorPlus Page </h1>\n\n        </div>\n    );\n}\n\nexport default JuniorPlus;\n","import React from \"react\";\nimport Error404 from \"./pages/Error404\";\nimport PreJunior from \"./pages/PreJunior\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport {NavLink} from \"react-router-dom\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\n\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR: \"/junior\",\n    JUNIOR_PLUS: \"/juniorPlus\"\n    // added addition paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n\n            <Switch>\n\n            в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR\n            exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n\n\n            у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport {HashRouter} from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\n\n\nfunction HW5() {\n    return (\n        <div>\n\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n                <Header/>\n\n                <Routes/>\n\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\n// import HW1 from \"../../../p2-homeworks/h1/HW1\";\n// import HW2 from \"../../../p2-homeworks/h2/HW2\";\n// import HW3 from \"../../../p2-homeworks/h3/HW3\";\n// import HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n         </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clear\":\"Message_clear__16cYE\",\"container\":\"Message_container__3DzFO\",\"blockCenter\":\"Message_blockCenter__CWuoz\",\"avatarHolder\":\"Message_avatarHolder__3GkpA\",\"blockRight\":\"Message_blockRight__3_ZQj\",\"avatar\":\"Message_avatar__3Uujh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errClass\":\"SuperInputText_errClass__vayad\",\"errorInput\":\"SuperInputText_errorInput__23nS3\",\"error\":\"SuperInputText_error__3xbCs\",\"superInput\":\"SuperInputText_superInput__3wMRl\",\"group\":\"SuperInputText_group__2SnzG\",\"label\":\"SuperInputText_label__1Ue5n\",\"bar\":\"SuperInputText_bar__31Tek\"};"],"sourceRoot":""}