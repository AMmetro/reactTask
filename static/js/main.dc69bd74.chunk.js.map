{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","styles","container","blockRight","name","textMessage","message","time","clear","avatarHolder","avatar","src","alt","blockCenter","messageData","messageData2","HW1","Affair","curentAffair","affair","type","checked","priority","onClick","dellId","deleteAffairCallback","deleteCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","tsk","filterAffairs","deleteAffair","App","s","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.dc69bd74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"clear\":\"Message_clear__cAnr_\",\"container\":\"Message_container__-rvRk\",\"blockCenter\":\"Message_blockCenter__P9bDY\",\"avatarHolder\":\"Message_avatarHolder__1BsZx\",\"blockRight\":\"Message_blockRight__2fofV\",\"avatar\":\"Message_avatar__3LgY_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3ju9d\"};","import React from \"react\";\nimport styles from './Message.module.css';\nimport {dataType} from \"./HW1\";\n\n\n\nfunction Message(props:dataType) {\n\n    return (\n\n        <div className={styles.container}>\n\n            <div className={styles.blockRight}>\n                Hello, {props.name}\n                <i><p className={styles.textMessage}>{props.message}</p></i>\n                <p className={styles.time}>{props.time}</p>\n            </div>\n\n            <div className={styles.clear}></div>\n\n            <div className={styles.avatarHolder}>\n                <img className={styles.avatar}\n                     src={props.avatar}\n                     alt={\"avatar\"}/>\n            </div>\n\n            <div className={styles.clear}></div>\n            <div className={styles.blockCenter}></div>\n\n        </div>\n\n    );\n}\n\nexport default Message;\n\n\n\n","import React from \"react\";\nimport Message from \"./Message\";\n\n\nconst messageData: dataType = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Andrei\",\n    message: \"What type Data you put? 'Any' are not allowed!\",\n    time: \"22:00\",\n};\n\nconst messageData2: dataType = {\n    avatar: \"https://i.ytimg.com/vi/Tp9B6gDCXnU/maxresdefault.jpg\",\n    name: \"React\",\n    message: \" T_y_P_e_S nothing is sure everything is possible \",\n    time: \"22:01\",\n};\n\nexport type dataType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction HW1() {\n\n    return (\n        <div>\n            <hr/>\n            <div> homeworks 1 </div>\n\n            <Message\n                    avatar={messageData.avatar}\n                    name={messageData.name}\n                    message={messageData.message}\n                    time={messageData.time}\n            />\n\n\n            <hr/>\n            <Message\n                avatar={messageData2.avatar}\n                name={messageData2.name}\n                message={messageData2.message}\n                time={messageData2.time}\n            />\n\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    // affair: any // need to fix any\n               affair: AffairType // need to fix any\n    deleteAffairCallback: (_id:number)=>void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = (dellId:number) => {\n            props.deleteAffairCallback(dellId)};// need to fix\n\n        const curentAffair=props.affair\n\n    return (\n        <div>\n\n            <input type=\"checkbox\" checked={true}/>{curentAffair.name} <span>priority--</span>{curentAffair.priority }\n\n            <button onClick={(dellId)=>deleteCallback(curentAffair._id)}>X</button>\n\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (FilterType:FilterType)=>void\n    deleteAffairCallback: (_id: number)=> void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter(\"all\")  };   // need to fix\n    const setHigh = () => {props.setFilter(\"high\")};\n    const setMiddle = () => {props.setFilter(\"middle\")};\n    const setLow = () => {props.setFilter(\"low\")};\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n// export type AffairPriorityType = any // need to fix any\n                                export type AffairPriorityType = \"high\" | \"low\"|\"middle\"\n\n// export type AffairType = any; // need to fix any\n                                export type AffairType = {_id:number, name:string, priority:string};\n\nexport type FilterType = \"all\"|AffairPriorityType;\n\n\n// type defaultAffairsType <Array<affairTypes>>\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs:Array<AffairType>, filter:FilterType ):any=> { // need to fix any\n    if (filter === \"all\") return affairs;\n    else if (filter === \"high\") {\n        return affairs.filter(tsk => {return (tsk.priority === \"high\")})    }\n       else if (filter === \"low\") {\n        return affairs.filter(tsk => {return (tsk.priority === \"low\")})     }\n       else if (filter === \"middle\") {\n          return affairs.filter(tsk => {return (tsk.priority === \"middle\")})     }\n                                                        // return; // need to fix\n}\n\nexport const deleteAffair = (affairs:Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter( a => a._id !== _id ); // need to fix\n}\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\nimport HW6 from \"../../../p2-homeworks/h6/HW6\";\r\nimport HW7 from \"../../../p2-homeworks/h7/HW7\";\r\n\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <HW1/>\r\n            <HW2/>\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            {/*<HW5/>*/}\r\n            {/*<HW6/>*/}\r\n            {/*<HW7/>*/}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}